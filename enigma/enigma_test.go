package enigma

import (
	"testing"
)

func TestM3(t *testing.T) {
	tests := []struct {
		rotors    [3]Rotor
		reflector Reflector
		s         string
		want      string
	}{
		{
			rotors: [3]Rotor{
				NewRotor1('A', 'A'),
				NewRotor2('A', 'A'),
				NewRotor3('A', 'A'),
			},
			reflector: NewReflectorB(),
			s:         "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
			want:      "FUVEPUMWARVQKEFGHGDIJFMFXI",
		},
		{
			rotors: [3]Rotor{
				NewRotor1('C', 'A'),
				NewRotor2('D', 'A'),
				NewRotor3('E', 'A'),
			},
			reflector: NewReflectorB(),
			s:         "ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ",
			want:      "MRMQZKWEZCGBGGTZUOWQIOOHMOTULCKLVCXQDZBJQRSFTZVAJAWQFJSFLKYENWNQNDEZSMXLRMPTWQTUEVQAVDPHSRAZQUPFXRREFMDAWXYEABUISPCRADPELHNWPKRQLRYAROGWJJUEIEWIGZISDZXCLFDATUSILPVIWDFNPRWTBBQNSHDVRJMRQHZHSFZCGRASKJFBHRALEWCDHIYCKHNSAHVMOJSOXZNVAWGYGVOEBTQGIDMOYWXYTCIBAYSCKFIS",
		},
		{
			rotors: [3]Rotor{
				NewRotor6('F', 'A'),
				NewRotor4('T', 'A'),
				NewRotor5('V', 'A'),
			},
			reflector: NewReflectorB(),
			s
			want:      "YTDUFSPJYVMJPHIQPGQMDGUCPEOFFAHXSOXKHBCOQFSQHSPMMOQWGEJVNHJYRXRAGDZGGYTEJZBHVTFLGNKBROYGGFHCPBZQCOSDATJKPOLJQCBIVIFYWLTNHSEXMBXASECDXMVEFDORXQAYVCFXPJTMXOQYGDJZULJIVUSWYRJQHSFRGZIZKCUVRVLCVQTGOYHWPSNOQMBAFSTYYKSBKQMBXYWQRQMZHTCXYRDFCYEHZLCMXGYWTMYFGVEWYYCGTPOUKCKAJAQGSRHWNOVQDBYQVGBUUKBLGAWKTKNOMTLHYTDOXZYFFUHVBKZKPDZRJIEJIZTAXCMBNHLVVRTZRCJBVDPWDMAKGILMXSXJHAGNCWNYIEENWTHPFOWFKIEVTFQDBQVAFLLLXZTHPPRBSCNAUYQCAFLPEOEJJUIWQGLNHAPSTUJCAGJLZSRTBAKTDLXVIPXGIMLZQMVZRJPKDNIXQKSJQSSIGRXYROOEAPKRRSMMIPSGWAUXWGUQZXKUNJGGVSLXYGNAXDZWMFDBWKDSJMIPOCENXHWISZURDDPGXNHYPZFTCYDJPZDTUUVYNHRQGKMFPHQNZEBAXEPUGPBUTRSUPULMMIQHLUAWOHGPLARYCZMPGEUXSNGCUCBAWZTFJAQRQHMAJNNHMIBMZPEMLCMHFUZZJDZQVTPPYTYJKXIJPGZQHKVWZUCVTETRBIKWPXXTSFWRWSZGMSMIHENEQWFPFCEXLNTUSFBAWZMGCPIPRLKVSLXNXVNBTXLFCALUAZKPIRRK",
		},
		{
			rotors: [3]Rotor{
				NewRotor2('E', 'C'),
				NewRotor3('A', 'F'),
				NewRotor1('Z', 'Z'),
			},
			reflector: NewReflectorC(),
			s:         "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
			want:      "CRPYXXUUYZOCYRQNBLERAHHODJ",
		},
		{
			rotors: [3]Rotor{
				NewRotor6('X', 'D'),
				NewRotor7('N', 'J'),
				NewRotor8('P', 'O'),
			},
			reflector: NewReflectorC(),
			s:         "AAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEFFFFFFFFFFGGGGGGGGGGHHHHHHHHHHIIIIIIIIIIJJJJJJJJJJKKKKKKKKKKLLLLLLLLLLMMMMMMMMMMNNNNNNNNNNOOOOOOOOOOPPPPPPPPPPQQQQQQQQQQRRRRRRRRRRSSSSSSSSSSTTTTTTTTTTUUUUUUUUUUVVVVVVVVVVWWWWWWWWWWXXXXXXXXXXYYYYYYYYYYZZZZZZZZZZ",
			want:      "ISBQFMSYHNVWWAECXUGIMKKTZWRWZWMQAECQXCFJUFWGJLSRDLKLLLUNLOGHDNJIHAIHYQFAMDZLZPYOBNNLJZTRUTEGMVCIRHNEAJHLHMUIFXHTOCNBMWRQWNFDDPWUACDQRKEACLXHUSTWBDFPZAGHFAUEQEQZTBGCZNDMYDVBNIYCMJOXERRUTMRKZNZOPSCLURIBEZVNSABNDSMJFRCIFWXYJXPYHATRLOWLFDQIGICTIKLVZLWBUKMWIUHPJTRL",
		},
	}

	for _, test := range tests {
		e := NewM3(test.rotors, test.reflector)
		got := e.EncodeString(test.s)
		if got != test.want {
			t.Errorf("got=%s, want=%s", got, test.want)
		}
	}
}
